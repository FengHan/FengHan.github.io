<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Ubuntu | hanfeng.name]]></title>
  <link href="http://fenghan.github.io/blog/categories/ubuntu/atom.xml" rel="self"/>
  <link href="http://fenghan.github.io/"/>
  <updated>2015-09-09T11:54:21+08:00</updated>
  <id>http://fenghan.github.io/</id>
  <author>
    <name><![CDATA[HanFeng]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[使用Vagrant搭建本地Ubuntu开发环境]]></title>
    <link href="http://fenghan.github.io/blog/2015/07/22/vagrant-lnmp/"/>
    <updated>2015-07-22T14:13:27+08:00</updated>
    <id>http://fenghan.github.io/blog/2015/07/22/vagrant-lnmp</id>
    <content type="html"><![CDATA[<h1>前言</h1>

<p>使用PHP做Web开发已有4年，4年间只有第二年是在Ubuntu下开发，其它都是在Windows下开发，但Win下开发有如下缺点：</p>

<ol>
<li>Windows 不区分大小写，在Win下OK, 上传到服务器上有了Bug。</li>
<li>Windows 不能测试cron是否写得正确，执行php-cli麻烦</li>
<li>开发环境与生产环境不同，莫名的产生了一些Bug</li>
<li>自己的Linux水平下降，对服务器的一些配置慢慢感到了生疏。</li>
</ol>


<p>但在Ubuntu下开发，也有问题：</p>

<ol>
<li>不习惯的编辑器，那时使用IDEA作为编辑器，真心不好用。</li>
<li>当初用Word写文档，Ubuntu里没有。（现在用Markdown了）</li>
<li>团队开发使用QQ作为通讯工具，还要装一个QQ。（QQ真不适合作为沟通工具，其它无关内容总分心）</li>
</ol>


<p><img src="http://7xkc1x.com1.z0.glb.clouddn.com/cto_vagrant.png" alt="" /></p>

<h1>Vagrant优点</h1>

<p><a href="http://docs.vagrantup.com/">Vagrant</a>是用来管理虚拟机的，它有如下好处：</p>

<ol>
<li>对于开发人员来说，Vagrant可以帮你统一团队成员的开发环境。</li>
<li>对于运维人员来说，Vagrant可以给你提供一个与线上一致的测试环境。</li>
<li>对于设计人员来说，Vagrant可以让你只需要专注在设计上。</li>
</ol>


<p>Vagrant适合用来管理虚拟机，而Docker适合用来管理应用环境。</p>

<h3>需要安装的软件：</h3>

<ul>
<li>Vagrant</li>
<li>Virtual Box</li>
<li>putty</li>
<li>box <a href="https://atlas.hashicorp.com/boxes/search">虚拟机镜像查看</a></li>
</ul>


<p>添加box ubuntu/trusty64</p>

<pre><code>vagrant version
#查看版本

vagrant add box ubuntu/trusty64
# download the box named "ubuntu/trusty64" from Internet
#下载ubuntu14.04 lts(long term supporting)
</code></pre>

<p>添加的boxes会被多个项目重复利用。每个项目都会克隆它，而不会修改它。两个项目之间不会相互影响</p>

<pre><code>vagrant box list
#查看box列表

vagrant init ubuntu/trusty64; 
vagrant init

vagrant up --provider virtualbox
vagrant up

vagrant ssh
</code></pre>

<p>bootstrap.sh 文件</p>

<pre><code>#!/usr/bin/env bash

apt-get update
apt-get install -y apache2
if ! [ -L /var/www ]; then
  rm -rf /var/www
  ln -fs /vagrant /var/www
fi
</code></pre>

<p>Vagrantfile文件 配置文件</p>

<pre><code>Vagrant.configure("2") do |config|
   config.vm.box = "hashicorp/precise32"
   config.vm.provision :shell, path: "bootstrap.sh"
   config.vm.network :forwarded_port, guest: 80, host: 4567
   config.vm.network :private_network, ip: "192.168.33.10"
   #重启虚拟机，这样我们就能用 192.168.33.10 访问这台机器了，你可以把 IP 改成其他地址，只要不产生冲突就行。
end
</code></pre>

<p>vagrant load &ndash;provision</p>

<p>vagrant login
输入用户名和密码</p>

<p>vagrant share</p>

<p>将产生一个网址，互联网上的其他人能够访问</p>

<h3>停止工作</h3>

<pre><code>vagrant suspend
vagrant halt
vagrant destroy
</code></pre>

<h3>打包分发</h3>

<pre><code>vagrant package
vagrant package --output NAME 导出box (NAME.box)
</code></pre>

<p>打包完成后会在当前目录生成一个 package.box 的文件，将这个文件传给其他用户，其他用户只要添加这个 box 并用其初始化自己的开发目录就能得到一个一模一样的开发环境了。</p>

<h3>注意事项</h3>

<p>使用 Apache/Nginx 时会出现诸如图片修改后但页面刷新仍然是旧文件的情况，是由于静态文件缓存造成的。需要对虚拟机里的 Apache/Nginx 配置文件进行修改：</p>

<pre><code># Apache 配置添加:
EnableSendfile off

# Nginx 配置添加:
sendfile off;
</code></pre>

<h3>补充</h3>

<p>Putty工具连接：</p>

<p>注：虚拟机的默认IP|Port：127.0.0.1:2222   用户：vagrant | root   密码：vagrant</p>

<h3>参考链接</h3>

<p><a href="http://www.ciandt.com.cn/blog/how-to-use-vagrant-build-drupal-development-environment-windows">CI&amp;T: 使用VAGRANT构建DRUPAL本地开发环境 - WINDOWS</a></p>

<p><a href="http://segmentfault.com/a/1190000000264347">使用 Vagrant 打造跨平台开发环境</a></p>
]]></content>
  </entry>
  
</feed>
