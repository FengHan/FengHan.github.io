<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Laravel | hanfeng.name]]></title>
  <link href="http://hanfeng.name/blog/categories/laravel/atom.xml" rel="self"/>
  <link href="http://hanfeng.name/"/>
  <updated>2015-12-17T09:49:52+00:00</updated>
  <id>http://hanfeng.name/</id>
  <author>
    <name><![CDATA[HanFeng]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Laravel5 基础]]></title>
    <link href="http://hanfeng.name/blog/2015/09/09/learn-laravel-from-scratch/"/>
    <updated>2015-09-09T03:09:29+00:00</updated>
    <id>http://hanfeng.name/blog/2015/09/09/learn-laravel-from-scratch</id>
    <content type="html"><![CDATA[<h1>前言</h1>

<p>Laravel 5 的很多新功能是来自 Jeffrey Way的 idea,</p>

<p>如: Form Requests, Laravel Elixir, Command bus etc..</p>

<p>所以, 他的这套视频就很有观看的必要
 <a href="https://laracasts.com/series/laravel-5-fundamentals">https://laracasts.com/series/laravel-5-fundamentals</a></p>

<p>现已看完，做下记录</p>

<h2>Laravel5 Foundation</h2>

<h4>需求分析：</h4>

<ol>
<li>Article模块

<ul>
<li>Articles List</li>
<li>Create Article :title , body, published_at, tag</li>
<li>Edit Article</li>
</ul>
</li>
<li>用户登录模块</li>
</ol>


<h4>细节：</h4>

<ol>
<li>Create Article的输入内容，要进行validate，使用Request进行验证。</li>
<li>Create Article成功时，用Flash Message提示。</li>
</ol>


<h4>学习的内容</h4>

<ul>
<li>Composer 的安装与使用</li>
<li>Virtual Box, Vagrant, Homestead安装与使用</li>
<li>Route 路由的使用</li>
<li>Blade  模板文件</li>
<li>.env 开发环境的设置</li>
<li>migration 创建和修改数据库的结构</li>
<li>MVC在Laravel中的工作流</li>
<li>Form表单</li>
<li>Model 中的 Dates : Carbon\Carbon</li>
<li>Model 中的 Scopes : 封装判断条件（例如： article是否发布）</li>
<li>Model 中的 set Attributes : 插入记录时，自动插入（例如时间）</li>
<li>View Partials 视图文件的局部选软</li>
<li>Eloquent  这个很强大，但感觉复杂查询会很麻烦，// todo 继续深入学习</li>
<li>Auth  Laravel5.0 提供了简单的注册、登录和找回密码</li>
<li>Middleware （用处：例如验证是否用户登录）</li>
<li>Many to Many Relation (A article has many tags, and a tag has many articles.)</li>
<li>Tag 选择地时候用了Select2插件</li>
<li>View Partial Always Receive Data (例如首页导航条)</li>
<li>Service Container (又叫 Ioc Container,是Laravel框架的核心所在)</li>
</ul>


<h3>用到的第三方包</h3>

<pre><code>{
    “require” : {
        "barryvdh/laravel-ide-helper": "^2.1",
        "illuminate/html": "^5.0",
        "laracasts/flash": "~1.3",
    }
}
</code></pre>

<ul>
<li>barryvdh/laravel-ide-helper  用来提示Laravel的Facade</li>
<li>illuminate/html Html Form封装了form表单</li>
<li>laracasts/flash Jeffrey Way写的 flash message</li>
</ul>


<p>以上文件放在composer.json中，第二步是在config/app.php配置 provider 和 alias.</p>

<h3>经常用到的命令</h3>

<pre><code>php artisan make:controller --plain
php artisan dump-autoload 
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[使用Homestead搭建本地Laravel开发环境]]></title>
    <link href="http://hanfeng.name/blog/2015/08/09/laravel-homestead/"/>
    <updated>2015-08-09T07:06:33+00:00</updated>
    <id>http://hanfeng.name/blog/2015/08/09/laravel-homestead</id>
    <content type="html"><![CDATA[<h3>环境说明</h3>

<ul>
<li>64bit Win7系统</li>
<li>Git Bash</li>
<li>Vagrant</li>
<li>Virtual Box</li>
</ul>


<h3>约定</h3>

<p>我们要创建一个项目blog，放在/d/sites/blog/目录下面</p>

<h3>安装</h3>

<p>创建项目目录</p>

<pre><code>cd /d/sites
mkdir blog
</code></pre>

<p>下载laravel的box和homestead</p>

<pre><code>vagrant box add laravel/homestead
git clone https://github.com/laravel/homestead.git Homestead
</code></pre>

<p>生成Homestead.yaml 到~/.homestead目录下</p>

<pre><code>cd /d/sites/blog/Homestead/
init.sh
</code></pre>

<p>生成秘钥</p>

<pre><code>ssh-keygen -t rsa -C "you@homestead"
</code></pre>

<p>配置文件 ~/.homestead/Homestead.yaml</p>

<pre><code>---
ip: "192.168.10.10"
memory: 2048
cpus: 1
provider: virtualbox

authorize: ~/.ssh/id_rsa.pub

keys:
    - ~/.ssh/id_rsa

folders:
    - map: d:\sites\blog
      to: /home/vagrant/blog

sites:
    - map: blog.app
      to: /home/vagrant/blog/public

databases:
    - homestead

variables:
    - key: APP_ENV
      value: local

# blackfire:
#     - id: foo
#       token: bar
#       client-id: foo
#       client-token: bar

# ports:
#     - send: 93000
#       to: 9300
#     - send: 7777
#       to: 777
#       protocol: udp
</code></pre>

<h3>Win下添加快捷键</h3>

<pre><code>cd ~
vi .bashrc
alias vm="ssh vagrant@127.0.0.1 -p 2222"

source .bashrc
</code></pre>

<h3>启动虚拟机</h3>

<pre><code>cd /d/sites/blog/Homestead/
vagrant up
</code></pre>

<h3>修改hosts文件</h3>

<h3>虚拟机的mysql</h3>

<pre><code>host: 127.0.0.1
port: 33060
user: homestead
pass: secret
</code></pre>

<h3>虚拟机里的端口转发</h3>

<pre><code>SSH: 2222 -&gt; Forwards To 22
HTTP: 8000 -&gt; Forwards To 80
MySQL: 33060 -&gt; Forwards To 3306
Postgres: 54320 -&gt; Forwards To 5432
</code></pre>

<h3>配置</h3>

<pre><code>php artisan key:generate
</code></pre>

<p>将生成的key复制到config/app.php替换82行的APP_KEY键值。</p>

<h3>参考链接</h3>

<p> <a href="http://www.golaravel.com/laravel/docs/5.1/homestead/">golaravel</a></p>

<p><a href="https://phphub.org/topics/2">phphub.org</a></p>
]]></content>
  </entry>
  
</feed>
